{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/calendar": {
            "put": {
                "description": "Updates an event by its ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Update an existing event",
                "parameters": [
                    {
                        "description": "Updated Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateCalendarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated event",
                        "schema": {
                            "$ref": "#/definitions/dtos.CalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid event ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new calendarof that program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Create a new Calendar",
                "parameters": [
                    {
                        "description": "Calendar Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateCalendarRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created calendar",
                        "schema": {
                            "$ref": "#/definitions/dtos.CalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/calendar/GetByMajorID/{program_id}": {
            "get": {
                "description": "Fetches all calendar events for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Get calendar by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved calendar events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.CalendarResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Calendar events not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/calendar/{id}": {
            "delete": {
                "description": "Deletes the specified event using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Delete an event by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid event ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/config/GetByMajorId/{program_id}": {
            "get": {
                "description": "Fetches all config for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get config by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched config",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ConfigReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employee": {
            "put": {
                "description": "Updates an employee by their ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update an existing employee",
                "parameters": [
                    {
                        "description": "Updated Employee Data",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated employee",
                        "schema": {
                            "$ref": "#/definitions/dtos.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid employee ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee Data",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created employee",
                        "schema": {
                            "$ref": "#/definitions/dtos.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employee/GetByMajorID/{program_id}": {
            "get": {
                "description": "Fetches all employees for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employees by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved employees",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.EmployeeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Employees not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Fetches an employee by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved employee",
                        "schema": {
                            "$ref": "#/definitions/dtos.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid employee ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/program": {
            "post": {
                "description": "Create a new program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Create program",
                "parameters": [
                    {
                        "description": "Program object",
                        "name": "program",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateMajorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created program",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/program/GetAllMajor": {
            "get": {
                "description": "Fetches all program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Get all program",
                "responses": {
                    "200": {
                        "description": "Successfully fetched program",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Program"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/program/UpdateMajorName": {
            "put": {
                "description": "Update the name of a program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Update program name",
                "parameters": [
                    {
                        "description": "Program object containing ID and name",
                        "name": "program",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated program name",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projectConfig": {
            "post": {
                "description": "Update all project config if ID is provided, otherwise insert new project config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectConfig"
                ],
                "summary": "Upsert project config",
                "parameters": [
                    {
                        "description": "Configurations",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ProjectConfigUpsertRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated config",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projectConfig/GetByMajorId/{program_id}": {
            "get": {
                "description": "Fetches all config for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectConfig"
                ],
                "summary": "Get config by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched config",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ProjectConfigResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projectResource/{id}": {
            "delete": {
                "description": "Delete a resource and its file",
                "tags": [
                    "Resource"
                ],
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/projects": {
            "post": {
                "description": "Creates a new project with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projects/advisor/{advisor_id}": {
            "get": {
                "description": "Fetches a project by its advisor ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get a project by Advisor ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advisor ID",
                        "name": "advisor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advisor ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projects/student/{student_id}": {
            "get": {
                "description": "Fetches a project by its student ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get a project by Student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid student ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Fetches a project by its unique ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get a project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a project by its ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update an existing project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Project Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid project ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified project using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete a project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CalendarResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.ConfigReponse": {
            "type": "object",
            "properties": {
                "config_name": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateCalendarRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateEmployeeRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateMajorRequest": {
            "type": "object",
            "required": [
                "program_name"
            ],
            "properties": {
                "program_name": {
                    "type": "string"
                }
            }
        },
        "dtos.EmployeeResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "dtos.ProjectConfigResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "program_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.ProjectConfigUpsertRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "program_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateCalendarRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateEmployeeRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "course_name": {
                    "type": "string"
                },
                "course_no": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                }
            }
        },
        "models.Employee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Project"
                    }
                }
            }
        },
        "models.Program": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "program_name": {
                    "type": "string"
                }
            }
        },
        "models.PDF": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PDFPage"
                    }
                },
                "resource_id": {
                    "type": "integer"
                }
            }
        },
        "models.PDFPage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "page_number": {
                    "type": "integer"
                },
                "pdf_id": {
                    "description": "Foreign key",
                    "type": "integer"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "abstract_text": {
                    "type": "string"
                },
                "academic_year": {
                    "type": "integer"
                },
                "course": {
                    "$ref": "#/definitions/models.Course"
                },
                "course_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Employee"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_approved": {
                    "type": "boolean"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Student"
                    }
                },
                "project_no": {
                    "type": "string"
                },
                "project_resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectResource"
                    }
                },
                "section_id": {
                    "type": "string"
                },
                "semester": {
                    "type": "integer"
                },
                "title_en": {
                    "type": "string"
                },
                "title_th": {
                    "type": "string"
                }
            }
        },
        "models.ProjectResource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "resource": {
                    "$ref": "#/definitions/models.Resource"
                }
            }
        },
        "models.Resource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "pdf": {
                    "$ref": "#/definitions/models.PDF"
                },
                "resource_name": {
                    "type": "string"
                },
                "resource_type": {
                    "$ref": "#/definitions/models.ResourceType"
                },
                "resource_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ResourceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mime_type": {
                    "type": "string"
                }
            }
        },
        "models.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Unique email address",
                    "type": "string"
                },
                "first_name": {
                    "description": "First name of the student",
                    "type": "string"
                },
                "id": {
                    "description": "Use `ID` as the primary key",
                    "type": "string"
                },
                "last_name": {
                    "description": "Last name of the student",
                    "type": "string"
                },
                "program": {
                    "description": "Program related to student",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Program"
                        }
                    ]
                },
                "program_id": {
                    "description": "Program ID, not null",
                    "type": "integer"
                },
                "prefix": {
                    "description": "Optional field for title (e.g., Mr., Ms., etc.)",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}