{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/v1/assetResources": {
            "post": {
                "description": "Upload a new asset resource for a specific program",
                "tags": [
                    "Resource"
                ],
                "summary": "Upload an asset resource",
                "parameters": [
                    {
                        "description": "Upload Asset Resource Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UploadAssetResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AssetResource"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/assetResources/{id}": {
            "delete": {
                "description": "Delete an asset resource by its ID",
                "tags": [
                    "Resource"
                ],
                "summary": "Delete an asset resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/assetResources/{program_id}": {
            "get": {
                "description": "Retrieve all asset resources associated with a specific program",
                "tags": [
                    "Resource"
                ],
                "summary": "Get asset resources by program ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.AssetResource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/calendars": {
            "put": {
                "description": "Updates an event by its ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Update an existing event",
                "parameters": [
                    {
                        "description": "Updated Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateCalendarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated event",
                        "schema": {
                            "$ref": "#/definitions/dtos.CalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid event ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new calendarof that program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Create a new Calendar",
                "parameters": [
                    {
                        "description": "Calendar Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateCalendarRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created calendar",
                        "schema": {
                            "$ref": "#/definitions/dtos.CalendarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/calendars/program/{program_id}": {
            "get": {
                "description": "Fetches all calendar events for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Get calendar by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved calendar events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.CalendarResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Calendar events not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/calendars/{id}": {
            "delete": {
                "description": "Deletes the specified event using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calendar"
                ],
                "summary": "Delete an event by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid event ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/configs": {
            "put": {
                "description": "Creates a new config or updates an existing config for the given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Upsert config for a program",
                "parameters": [
                    {
                        "description": "Config details",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully upserted config",
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    },
                    "400": {
                        "description": "Invalid program ID or config data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/configs/program/{program_id}": {
            "get": {
                "description": "Fetches all config for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get config by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched config",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Config"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/configs/{id}": {
            "delete": {
                "description": "Deletes a configuration by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Delete config by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Config ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted config",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid config ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Config not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/courses/program/{program_id}": {
            "get": {
                "description": "Retrieves a list of courses for a given program ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get courses by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved courses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Course"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/courses/{course_no}": {
            "get": {
                "description": "Retrieves a course by its course number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get course by course number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course Number",
                        "name": "course_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved course",
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/programs": {
            "get": {
                "description": "Retrieves all programs from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Get All Programs",
                "responses": {
                    "200": {
                        "description": "Successfully fetched programs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Program"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "update program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Update Program",
                "parameters": [
                    {
                        "description": "Program details",
                        "name": "program",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated program",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new program in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Program"
                ],
                "summary": "Create a New Program",
                "parameters": [
                    {
                        "description": "Program creation details",
                        "name": "program",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateProgramRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created program",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projectConfigs": {
            "put": {
                "description": "Update all project config if ID is provided, otherwise insert new project config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectConfig"
                ],
                "summary": "Upsert project config",
                "parameters": [
                    {
                        "description": "Configurations",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ProjectConfigUpsertRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated config",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projectConfigs/program/{program_id}": {
            "get": {
                "description": "Fetches all config for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectConfig"
                ],
                "summary": "Get config by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched config",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ProjectConfigResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Program not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projectResourceConfigs": {
            "put": {
                "description": "Insert or update project resource configurations. If an ID is provided, it updates the configuration; otherwise, it inserts a new configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectResourceConfig"
                ],
                "summary": "Upsert Project Resource Configurations",
                "parameters": [
                    {
                        "description": "configuration to upsert",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjectResourceConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully upsert configurations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projectResourceConfigs/program/{program_id}": {
            "get": {
                "description": "Fetch all project resource configurations for a given program ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectResourceConfig"
                ],
                "summary": "Get Project Resource Config by Program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched configurations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.ProjectResourceConfig"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No configurations found for the given program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projectResources/{id}": {
            "delete": {
                "description": "Delete a project resource and its associated file",
                "tags": [
                    "Resource"
                ],
                "summary": "Delete a project resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/projectRoles/program/{program_id}": {
            "get": {
                "description": "Retrieves all project roles for a given program ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectRole"
                ],
                "summary": "Get all project roles by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved project roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectRole"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "post": {
                "description": "Creates a new project with the provided data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of URLs",
                        "name": "urls",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "List of Titles",
                        "name": "titles",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload Files",
                        "name": "files",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Data",
                        "name": "project",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/projects/{id}": {
            "put": {
                "description": "Updates a project by its ID with the provided data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update an existing project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of URLs",
                        "name": "urls",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "List of Titles",
                        "name": "titles",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload Files",
                        "name": "files",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Project Data",
                        "name": "project",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "Invalid project ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified project using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete a project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/staffs": {
            "put": {
                "description": "Updates an staff by their ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Update an existing staff",
                "parameters": [
                    {
                        "description": "Updated Staff Data",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated staff",
                        "schema": {
                            "$ref": "#/definitions/dtos.StaffResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid staff ID or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Create a new staff",
                "parameters": [
                    {
                        "description": "Staff Data",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created staff",
                        "schema": {
                            "$ref": "#/definitions/dtos.StaffResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/staffs/GetAllStaffs": {
            "get": {
                "description": "Fetches all staffs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get all staffs",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved staffs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.StaffResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Staffs not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/staffs/email/{email}": {
            "get": {
                "description": "Retrieves a staff member by their email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get staff by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Staff Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved staff",
                        "schema": {
                            "$ref": "#/definitions/dtos.StaffResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/staffs/program/{program_id}": {
            "get": {
                "description": "Fetches all staffs for a given program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get staffs by program ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved staffs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.StaffResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Staffs not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/staffs/{id}": {
            "get": {
                "description": "Fetches an staff by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get staff by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved staff",
                        "schema": {
                            "$ref": "#/definitions/dtos.StaffResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid staff ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Staff not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/students/program/{program_id}/current_year": {
            "get": {
                "description": "Retrieves a list of students for a given program ID, academic year, and semester",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get students by program ID, academic year, and semester",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved students",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Student"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/students/{student_id}": {
            "get": {
                "description": "Retrieves a list of students for a given student ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get students by student ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved students",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Student"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid program ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/students/{student_id}/check": {
            "get": {
                "description": "Checks if a student has permission to create a project based on their student ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Check student permission for creating a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "student_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully checked permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid student ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/uploads/program/{program_id}/create-project": {
            "post": {
                "description": "Uploads and processes a create project file for a given program ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload create project file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Create Project File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid program ID or failed to retrieve the file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/uploads/program/{program_id}/student-enrollment": {
            "post": {
                "description": "Uploads and processes a student enrollment file for a given program ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload student enrollment file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Program ID",
                        "name": "program_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Student Enrollment File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file processed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid program ID or failed to retrieve the file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v2/projectResourceConfigs": {
            "put": {
                "description": "Insert or update project resource configurations. If an ID is provided, it updates the configuration; otherwise, it inserts a new configuration.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectResourceConfig"
                ],
                "summary": "Upsert Project Resource Configurations",
                "parameters": [
                    {
                        "description": "configuration to upsert",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjectResourceConfig"
                        }
                    },
                    {
                        "type": "file",
                        "description": "Icon file",
                        "name": "icon",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully upsert configurations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CalendarResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateCalendarRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateProgramRequest": {
            "type": "object",
            "properties": {
                "program_name_en": {
                    "type": "string"
                },
                "program_name_th": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateStaffRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name_en": {
                    "type": "string"
                },
                "first_name_th": {
                    "type": "string"
                },
                "last_name_en": {
                    "type": "string"
                },
                "last_name_th": {
                    "type": "string"
                },
                "prefix_en": {
                    "type": "string"
                },
                "prefix_th": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.ProjectConfigResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "program_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.ProjectConfigUpsertRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "program_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.StaffResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name_en": {
                    "type": "string"
                },
                "first_name_th": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name_en": {
                    "type": "string"
                },
                "last_name_th": {
                    "type": "string"
                },
                "prefix_en": {
                    "type": "string"
                },
                "prefix_th": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdateCalendarRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateStaffRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name_en": {
                    "type": "string"
                },
                "first_name_th": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name_en": {
                    "type": "string"
                },
                "last_name_th": {
                    "type": "string"
                },
                "prefix_en": {
                    "type": "string"
                },
                "prefix_th": {
                    "type": "string"
                },
                "program_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UploadAssetResource": {
            "type": "object"
        },
        "models.AssetResource": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Config": {
            "type": "object",
            "properties": {
                "config_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "course_name": {
                    "type": "string"
                },
                "course_no": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                }
            }
        },
        "models.PDF": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PDFPage"
                    }
                },
                "project_resource_id": {
                    "type": "integer"
                }
            }
        },
        "models.PDFPage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "page_number": {
                    "type": "integer"
                },
                "pdf_id": {
                    "type": "integer"
                }
            }
        },
        "models.Program": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "program_name_en": {
                    "type": "string"
                },
                "program_name_th": {
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "abstract_text": {
                    "type": "string"
                },
                "academic_year": {
                    "type": "integer"
                },
                "course": {
                    "$ref": "#/definitions/models.Course"
                },
                "course_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Student"
                    }
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "project_no": {
                    "type": "string"
                },
                "project_resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectResource"
                    }
                },
                "section_id": {
                    "type": "string"
                },
                "semester": {
                    "type": "integer"
                },
                "staffs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Staff"
                    }
                },
                "title_en": {
                    "type": "string"
                },
                "title_th": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ProjectResource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "pdf": {
                    "$ref": "#/definitions/models.PDF"
                },
                "project": {
                    "$ref": "#/definitions/models.Project"
                },
                "project_id": {
                    "type": "integer"
                },
                "resource_name": {
                    "type": "string"
                },
                "resource_type": {
                    "$ref": "#/definitions/models.ResourceType"
                },
                "resource_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.ProjectResourceConfig": {
            "type": "object",
            "properties": {
                "icon_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "resource_type": {
                    "$ref": "#/definitions/models.ResourceType"
                },
                "resource_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.ProjectRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "role_name_en": {
                    "type": "string"
                },
                "role_name_th": {
                    "type": "string"
                }
            }
        },
        "models.ResourceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "models.Staff": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name_en": {
                    "type": "string"
                },
                "first_name_th": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name_en": {
                    "type": "string"
                },
                "last_name_th": {
                    "type": "string"
                },
                "prefix_en": {
                    "type": "string"
                },
                "prefix_th": {
                    "type": "string"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Project"
                    }
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "academic_year": {
                    "type": "integer"
                },
                "course": {
                    "$ref": "#/definitions/models.Course"
                },
                "course_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "program": {
                    "$ref": "#/definitions/models.Program"
                },
                "program_id": {
                    "type": "integer"
                },
                "sec_lab": {
                    "type": "string"
                },
                "semester": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}