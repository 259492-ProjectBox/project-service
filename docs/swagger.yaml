basePath: /api
definitions:
  dtos.CalendarResponse:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      program_name:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  dtos.ConfigResponse:
    properties:
      config_name:
        type: string
      program_id:
        type: integer
      value:
        type: string
    type: object
  dtos.CreateCalendarRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      program_id:
        type: integer
      start_date:
        type: string
      title:
        type: string
    type: object
  dtos.CreateProgramRequest:
    properties:
      program_name_en:
        type: string
      program_name_th:
        type: string
    type: object
  dtos.CreateStaffRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      prefix:
        type: string
      program_id:
        type: integer
    type: object
  dtos.ProjectConfigResponse:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      program_id:
        type: integer
      title:
        type: string
    type: object
  dtos.ProjectConfigUpsertRequest:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      program_id:
        type: integer
      title:
        type: string
    type: object
  dtos.StaffResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      prefix:
        type: string
      program_id:
        type: integer
    type: object
  dtos.UpdateCalendarRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      program_id:
        type: integer
      start_date:
        type: string
      title:
        type: string
    type: object
  dtos.UpdateStaffRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      prefix:
        type: string
      program_id:
        type: integer
    type: object
  dtos.UploadAssetResource:
    type: object
  models.AssetResource:
    properties:
      description:
        type: string
      id:
        type: integer
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      title:
        type: string
    type: object
  models.Config:
    properties:
      config_name:
        type: string
      id:
        type: integer
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      value:
        type: string
    type: object
  models.Course:
    properties:
      course_name:
        type: string
      course_no:
        type: string
      id:
        type: integer
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
    type: object
  models.PDF:
    properties:
      id:
        type: integer
      pages:
        items:
          $ref: '#/definitions/models.PDFPage'
        type: array
      project_resource_id:
        type: integer
    type: object
  models.PDFPage:
    properties:
      content:
        type: string
      id:
        type: integer
      page_number:
        type: integer
      pdf_id:
        type: integer
    type: object
  models.Program:
    properties:
      abbreviation:
        type: string
      id:
        type: integer
      program_name_en:
        type: string
      program_name_th:
        type: string
    type: object
  models.Project:
    properties:
      abstract_text:
        type: string
      academic_year:
        type: integer
      course:
        $ref: '#/definitions/models.Course'
      course_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      members:
        items:
          $ref: '#/definitions/models.Student'
        type: array
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      project_no:
        type: string
      project_resources:
        items:
          $ref: '#/definitions/models.ProjectResource'
        type: array
      section_id:
        type: string
      semester:
        type: integer
      staffs:
        items:
          $ref: '#/definitions/models.Staff'
        type: array
      title_en:
        type: string
      title_th:
        type: string
      updated_at:
        type: string
    type: object
  models.ProjectResource:
    properties:
      created_at:
        type: string
      id:
        type: integer
      path:
        type: string
      pdf:
        $ref: '#/definitions/models.PDF'
      project:
        $ref: '#/definitions/models.Project'
      project_id:
        type: integer
      resource_name:
        type: string
      resource_type:
        $ref: '#/definitions/models.ResourceType'
      resource_type_id:
        type: integer
      title:
        type: string
      url:
        type: string
    type: object
  models.ProjectResourceConfig:
    properties:
      icon_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      resource_type:
        $ref: '#/definitions/models.ResourceType'
      resource_type_id:
        type: integer
      title:
        type: string
    type: object
  models.ResourceType:
    properties:
      id:
        type: integer
      type_name:
        type: string
    type: object
  models.Staff:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      prefix:
        type: string
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      projects:
        items:
          $ref: '#/definitions/models.Project'
        type: array
    type: object
  models.Student:
    properties:
      academic_year:
        type: integer
      course:
        $ref: '#/definitions/models.Course'
      course_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      program:
        $ref: '#/definitions/models.Program'
      program_id:
        type: integer
      sec_lab:
        type: string
      semester:
        type: integer
      student_id:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /v1/assetResources:
    post:
      description: Upload a new asset resource for a specific program
      parameters:
      - description: Upload Asset Resource Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dtos.UploadAssetResource'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AssetResource'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload an asset resource
      tags:
      - Resource
  /v1/assetResources/{id}:
    delete:
      description: Delete an asset resource by its ID
      parameters:
      - description: Asset Resource ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an asset resource
      tags:
      - Resource
  /v1/assetResources/{program_id}:
    get:
      description: Retrieve all asset resources associated with a specific program
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.AssetResource'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get asset resources by program ID
      tags:
      - Resource
  /v1/calendars:
    post:
      consumes:
      - application/json
      description: Creates a new calendarof that program
      parameters:
      - description: Calendar Data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateCalendarRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created calendar
          schema:
            $ref: '#/definitions/dtos.CalendarResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new Calendar
      tags:
      - Calendar
    put:
      consumes:
      - application/json
      description: Updates an event by its ID with the provided data
      parameters:
      - description: Updated Event Data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateCalendarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated event
          schema:
            $ref: '#/definitions/dtos.CalendarResponse'
        "400":
          description: Invalid event ID or request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing event
      tags:
      - Calendar
  /v1/calendars/{id}:
    delete:
      description: Deletes the specified event using its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Event deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid event ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an event by ID
      tags:
      - Calendar
  /v1/calendars/program/{program_id}:
    get:
      description: Fetches all calendar events for a given program
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved calendar events
          schema:
            items:
              $ref: '#/definitions/dtos.CalendarResponse'
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Calendar events not found
          schema:
            additionalProperties: true
            type: object
      summary: Get calendar by program ID
      tags:
      - Calendar
  /v1/configs:
    put:
      description: Creates a new config or updates an existing config for the given
        program
      parameters:
      - description: Config details
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/models.Config'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully upserted config
          schema:
            $ref: '#/definitions/models.Config'
        "400":
          description: Invalid program ID or config data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Program not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upsert config for a program
      tags:
      - Config
  /v1/configs/program/{program_id}:
    get:
      description: Fetches all config for a given program
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched config
          schema:
            items:
              $ref: '#/definitions/dtos.ConfigResponse'
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Program not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get config by program ID
      tags:
      - Config
  /v1/courses/{course_no}:
    get:
      description: Retrieves a course by its course number
      parameters:
      - description: Course Number
        in: path
        name: course_no
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved course
          schema:
            $ref: '#/definitions/models.Course'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get course by course number
      tags:
      - Course
  /v1/courses/program/{program_id}:
    get:
      description: Retrieves a list of courses for a given program ID
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved courses
          schema:
            items:
              $ref: '#/definitions/models.Course'
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get courses by program ID
      tags:
      - Course
  /v1/programs:
    get:
      description: Retrieves all programs from the database
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched programs
          schema:
            items:
              $ref: '#/definitions/models.Program'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Programs
      tags:
      - Program
    post:
      consumes:
      - application/json
      description: Creates a new program in the database
      parameters:
      - description: Program creation details
        in: body
        name: program
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateProgramRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created program
          schema:
            $ref: '#/definitions/models.Program'
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a New Program
      tags:
      - Program
    put:
      consumes:
      - application/json
      description: update program
      parameters:
      - description: Program details
        in: body
        name: program
        required: true
        schema:
          $ref: '#/definitions/models.Program'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated program
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body or parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Program
      tags:
      - Program
  /v1/projectConfigs:
    put:
      consumes:
      - application/json
      description: Update all project config if ID is provided, otherwise insert new
        project config
      parameters:
      - description: Configurations
        in: body
        name: configs
        required: true
        schema:
          items:
            $ref: '#/definitions/dtos.ProjectConfigUpsertRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated config
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Program not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upsert project config
      tags:
      - ProjectConfig
  /v1/projectConfigs/program/{program_id}:
    get:
      description: Fetches all config for a given program
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched config
          schema:
            items:
              $ref: '#/definitions/dtos.ProjectConfigResponse'
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Program not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get config by program ID
      tags:
      - ProjectConfig
  /v1/projectResourceConfigs:
    put:
      consumes:
      - application/json
      description: Insert or update project resource configurations. If an ID is provided,
        it updates the configuration; otherwise, it inserts a new configuration.
      parameters:
      - description: configuration to upsert
        in: body
        name: configs
        required: true
        schema:
          $ref: '#/definitions/models.ProjectResourceConfig'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully upsert configurations
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upsert Project Resource Configurations
      tags:
      - ProjectResourceConfig
  /v1/projectResourceConfigs/program/{program_id}:
    get:
      description: Fetch all project resource configurations for a given program ID
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched configurations
          schema:
            items:
              items:
                $ref: '#/definitions/models.ProjectResourceConfig'
              type: array
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: No configurations found for the given program ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Project Resource Config by Program ID
      tags:
      - ProjectResourceConfig
  /v1/projectResources/{id}:
    delete:
      description: Delete a project resource and its associated file
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a project resource
      tags:
      - Resource
  /v1/projects:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new project with the provided data
      parameters:
      - description: List of URLs
        in: formData
        name: urls
        type: string
      - description: List of Titles
        in: formData
        name: titles
        type: string
      - description: Upload Files
        in: formData
        name: files
        type: file
      - description: Project Data
        in: formData
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created project
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new project
      tags:
      - Project
  /v1/projects/{id}:
    delete:
      description: Deletes the specified project using its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid project ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a project by ID
      tags:
      - Project
    put:
      consumes:
      - multipart/form-data
      description: Updates a project by its ID with the provided data
      parameters:
      - description: List of URLs
        in: formData
        name: urls
        type: string
      - description: List of Titles
        in: formData
        name: titles
        type: string
      - description: Upload Files
        in: formData
        name: files
        type: file
      - description: Project Data
        in: formData
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated project
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Invalid project ID or request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing project
      tags:
      - Project
  /v1/staffs:
    post:
      consumes:
      - application/json
      description: Creates a new staff
      parameters:
      - description: Staff Data
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateStaffRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created staff
          schema:
            $ref: '#/definitions/dtos.StaffResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new staff
      tags:
      - Staff
    put:
      consumes:
      - application/json
      description: Updates an staff by their ID with the provided data
      parameters:
      - description: Updated Staff Data
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateStaffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated staff
          schema:
            $ref: '#/definitions/dtos.StaffResponse'
        "400":
          description: Invalid staff ID or request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing staff
      tags:
      - Staff
  /v1/staffs/{id}:
    get:
      description: Fetches an staff by their ID
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved staff
          schema:
            $ref: '#/definitions/dtos.StaffResponse'
        "400":
          description: Invalid staff ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Staff not found
          schema:
            additionalProperties: true
            type: object
      summary: Get staff by ID
      tags:
      - Staff
  /v1/staffs/GetAllStaffs:
    get:
      description: Fetches all staffs
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved staffs
          schema:
            items:
              $ref: '#/definitions/dtos.StaffResponse'
            type: array
        "404":
          description: Staffs not found
          schema:
            additionalProperties: true
            type: object
      summary: Get all staffs
      tags:
      - Staff
  /v1/staffs/program/{program_id}:
    get:
      description: Fetches all staffs for a given program
      parameters:
      - description: Program ID
        in: path
        name: program_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved staffs
          schema:
            items:
              $ref: '#/definitions/dtos.StaffResponse'
            type: array
        "400":
          description: Invalid program ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Staffs not found
          schema:
            additionalProperties: true
            type: object
      summary: Get staffs by program ID
      tags:
      - Staff
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
